(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var i=n.getElementsByTagName("script");i.length&&(t=i[i.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();const t=e.p+"images/91901d0d47ea68db9434c301b247afd2.jpg",n=e.p+"images/9d35405672f4fca67945c4340723f583.jpg",i=e.p+"images/05fd679aa0d31e01c1762339eb657ce2.jpg";!function(){let e=1,l=0;!function(){document.querySelector(".menu-icon").addEventListener("click",(()=>{document.querySelector(".menu").classList.toggle("show-menu-option"),document.querySelector(".background-black").style.display="block"})),document.querySelector(".menu-option-icon").addEventListener("click",(()=>{document.querySelector(".menu").classList.remove("show-menu-option"),document.querySelector(".background-black").style.display="none"})),document.getElementById("img1").src=t,document.getElementById("img2").src=n,document.getElementById("img3").src=i;let s=document.querySelectorAll(".slides .slide");l=s.length,s.forEach(((e,t)=>{e.id=`slide${t+1}`,t>0&&(e.style.display="none")}));let c=document.querySelectorAll(".slide-next"),o=document.querySelectorAll(".slide-preview");c.forEach((t=>{t.addEventListener("click",(()=>{!function(){let t=document.querySelector(`#slide${e}`);if(e===l)return e=1,t.style.display="none",void(document.querySelector(".slides .slide").style.display="");e++;let n=document.getElementById(`slide${e}`);n.style.display="",t.addEventListener("animationend",(()=>{t.style.display="none",t.classList.remove("anima-left"),n.classList.remove("anima-left")}),{once:!0}),t.classList.add("anima-left"),n.classList.add("anima-left")}()}))})),o.forEach((t=>{t.addEventListener("click",(()=>{!function(){let t=document.querySelector(`#slide${e}`);if(1===e)return e=l,t.style.display="none",void(document.getElementById(`slide${l}`).style.display="");e--;let n=document.getElementById(`slide${e}`);n.style.display="",t.addEventListener("animationend",(()=>{t.style.display="none",t.classList.remove("anima-right"),n.classList.remove("anima-right")}),{once:!0}),t.classList.add("anima-right"),n.classList.add("anima-right")}()}))}))}()}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,